{"version":3,"sources":["../dev/app.js"],"names":[],"mappings":"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","file":"app.jsx.js","sourcesContent":["// const Icon = require(\"react-svgicon\");\r\nlet App = React.createClass({\r\n  getInitialState:function(){\r\n    // each path has info about what boxes it contains and how many are marked\r\n    let pathObj = {\r\n      \"1\": {\"layout\": [\"tl\",\"ml\",\"bl\"], \"marks\": 0 },\r\n      \"2\": {\"layout\": [\"tm\",\"mm\",\"bm\"], \"marks\": 0 },\r\n      \"3\": {\"layout\": [\"tr\",\"mr\",\"br\"], \"marks\": 0 },\r\n      \"4\": {\"layout\": [\"tl\",\"tm\",\"tr\"], \"marks\": 0 },\r\n      \"5\": {\"layout\": [\"ml\",\"mm\",\"mr\"], \"marks\": 0 },\r\n      \"6\": {\"layout\": [\"bl\",\"bm\",\"br\"], \"marks\": 0 },\r\n      \"7\": {\"layout\": [\"tl\",\"mm\",\"br\"], \"marks\": 0 },\r\n      \"8\": {\"layout\": [\"tr\",\"mm\",\"bl\"], \"marks\": 0 }\r\n    };\r\n    // info for each box about where it is located and its status\r\n    let boxes = [\r\n      {id:\"tl\", paths:[\"1\",\"4\",\"7\"], bgColor:\"dark-box\", activeClassColor:undefined, checked:false, mark:undefined},\r\n      {id:\"tm\", paths:[\"2\",\"4\"], bgColor:\"light-box\", activeClassColor:undefined, checked:false, mark:undefined},\r\n      {id:\"tr\", paths:[\"3\",\"4\",\"8\"], bgColor:\"dark-box\", activeClassColor:undefined, checked:false, mark:undefined},\r\n      {id:\"ml\", paths:[\"1\",\"5\"], bgColor:\"light-box\", activeClassColor:undefined, checked:false, mark:undefined},\r\n      {id:\"mm\", paths:[\"2\",\"5\",\"7\",\"8\"], bgColor:\"dark-box\", activeClassColor:undefined, checked:false, mark:undefined},\r\n      {id:\"mr\", paths:[\"3\",\"5\"], bgColor:\"light-box\", activeClassColor:undefined, checked:false, mark:undefined},\r\n      {id:\"bl\", paths:[\"1\",\"6\",\"8\"], bgColor:\"dark-box\", activeClassColor:undefined, checked:false, mark:undefined},\r\n      {id:\"bm\", paths:[\"2\",\"6\"], bgColor:\"light-box\", activeClassColor:undefined, checked:false, mark:undefined},\r\n      {id:\"br\", paths:[\"3\",\"6\",\"7\"], bgColor:\"dark-box\", activeClassColor:undefined, checked:false, mark:undefined}\r\n    ];\r\n\r\n    return {\r\n      pathObj,\r\n      boxes,\r\n      firstMove:true\r\n    }\r\n  },\r\n  update: function(obj){\r\n    this.setState(obj);\r\n  },\r\n  reset: function(){\r\n    // set first move to true;\r\n    console.log(\"reset method was called\");\r\n    this.setState({firstMove:true});\r\n  },\r\n  render:function() {\r\n    let appState = this.state;\r\n    return (\r\n      <div id=\"app\">\r\n        <div id=\"board-container\">\r\n          <Board appData={appState} reset={this.reset} update={this.update} />\r\n        </div>\r\n        <ResetBtn reset={this.reset}/>\r\n      </div>\r\n    )\r\n  }\r\n});\r\n\r\nlet Board = React.createClass({\r\n  getInitialState: function(){\r\n\r\n    // boxes in corners\r\n    const corners = [\"tl\",\"tr\",\"bl\",\"br\"];\r\n\r\n    return {\r\n      corners,\r\n      userIcon: \"x\",\r\n    }\r\n  },\r\n  render:function() {\r\n    return (\r\n      <div className=\"board mdl-shadow--8dp\">\r\n        <div className=\"inner-board\">\r\n          {this.props.appData.boxes.map(function(obj){\r\n            return (\r\n              <Box\r\n              boardState={this.state}\r\n              appData={this.props.appData}\r\n              update={this.props.update}\r\n              boxInfo={obj}\r\n              />\r\n            )\r\n          }.bind(this))}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n});\r\n\r\nlet Box = React.createClass({\r\n\r\n  getInitialState: function(){\r\n    return {}\r\n  },\r\n  componentDidUpdate: function(a,b) {\r\n    // did update --- previous props(a), and state(b)\r\n  },\r\n  componentWillUpdate: function(a,b) {\r\n    // will update --- new props(a), and state(b)\r\n  },\r\n  makeMoves: function(userBoxId,event){\r\n    let props = this.props;\r\n    // if its the first move then ...\r\n    if (props.appData.firstMove) {\r\n      // mark the box the user picked\r\n      this.markBox(userBoxId,\"x\",\"teal-box\");\r\n      // make the first move for computer\r\n      this.firstCompMove(userBoxId);\r\n    } else {\r\n      if ( !props.boxInfo.checked) {\r\n        // make mark for user...\r\n        this.markBox(userBoxId,\"x\",\"teal-box\");\r\n        // make choice for comp\r\n        let boxId = this.computerChoice();\r\n        console.log(boxId);\r\n        this.markBox(boxId,\"o\",\"grey-box\")\r\n      }\r\n    }\r\n  },\r\n  firstCompMove: function(userPickBoxId) {\r\n    let markDelay = window.setTimeout(makeMove.bind(this),500);\r\n    function makeMove(){\r\n      const props = this.props;\r\n      let myBoxInfo = props.boxInfo;\r\n\r\n      if( this.isCorner(userPickBoxId) ){\r\n        this.markBox(\"mm\", \"o\",\"grey-box\");\r\n      } else {\r\n        var corner = this.getLastCorner(myBoxInfo.paths);\r\n        this.markBox(corner, \"o\",\"grey-box\");\r\n      }\r\n      this.props.update({firstMove:false});\r\n    }\r\n  },\r\n  twoInRow: function(){\r\n    // check for matches with computer\r\n    // check for matches with user\r\n    var masterReturn = false;\r\n    let choiceObj = [1,2,3,4,5,6,7,8].filter(checkPath.bind(this));\r\n    return masterReturn;\r\n    function checkPath( path ) {\r\n      let toReturn = false;\r\n      // first ignore the paths that are filled\r\n      let p = this.props.appData.pathObj[ path ];\r\n      if ( p.marks < 3 ) {\r\n        // return arr is in this format [[box],[box],[box]]\r\n        // this arr represents the path and the values in it\r\n        let pathVals = p.layout.map(convert.bind(this));\r\n        // here we are testing the path for duplicates...\r\n        let response = pathVals.map(function(a,b,mapArr){\r\n          // the mark of the double found\r\n          let mastMark = a[1];\r\n          // this is the open box in the path of the double\r\n          let openBox = mapArr.filter( ele => ele[1] !== a[1])[0];\r\n          let copy = mapArr.slice(0);\r\n          // remove the item we are on...\r\n          copy.splice(b,1);\r\n          // return the mark of the other items\r\n          let dif = copy.map(ele=> ele[1] );\r\n          // if mark we are checking for is found again ...\r\n          if(dif.indexOf(mastMark) > -1 && mastMark!== undefined){\r\n            console.log(`${mastMark} is about to win. Play ${openBox} to stop them`);\r\n            masterReturn = {openBox:openBox[0],isTrue:true,path}\r\n          }\r\n        }).filter(obj => obj !== undefined );\r\n      }\r\n      function convert(a,b,c){\r\n        let mark = this.props.appData.boxes.filter( obj=>a === obj.id )[0].mark;\r\n        return [a,mark]\r\n      }\r\n    };\r\n  },\r\n  isCorner: function(box){\r\n    return (this.props.boardState.corners.indexOf(box) > -1 )? true : false\r\n  },\r\n  getLastCorner: function(paths) {\r\n    return (\r\n      paths.map( getPathsCorners.bind(this) )\r\n        .filter( a => a !== undefined )[0]\r\n        // only need one ie: the first one\r\n    )\r\n    function getPathsCorners( pId ){\r\n      let arr = this.props.appData.pathObj[pId].layout;\r\n      return arr.filter(firstCorner.bind(this))[0]\r\n      // only need one corner but all are returned\r\n    }\r\n    function firstCorner(box) {\r\n      return this.isCorner(box)\r\n    }\r\n  },\r\n  getOpenCorner: function() {\r\n    let boxes = this.props.appData.boxes;\r\n    return this.props.boardState.corners.filter(cner => {\r\n      // return the corner that is not checked\r\n      return boxes.filter(a => a.id === cner)[0].checked === false;\r\n\r\n    })[0]; // even if multiple open corners, any open one is fine thats why I choose 0 index\r\n  },\r\n  markBox: function(boxId,mark,colorClass){\r\n    // setting variables for master app data\r\n    let {boxes,pathObj}=this.props.appData;\r\n    // set the box id to checked and give it a mark\r\n    let box = boxes.filter( a => boxId === a.id)[0];\r\n      box.checked = true;\r\n      box.mark = mark;\r\n      box.activeClassColor = colorClass;\r\n    // add one to the each path that has a mark in it via the path object.marks property\r\n    box.paths.map(a => {pathObj[a].marks++});\r\n\r\n    // update master object with the new board info\r\n    this.props.update({pathObj,boxes});\r\n\r\n\r\n    let pId = this.state.id;\r\n    // this.pushToHistory(box,mark);\r\n  },\r\n  computerChoice: function(){\r\n    // this choice does not include the computers first move\r\n    // however all the other computer moves come through here\r\n    //deciding on computers next move\r\n    let checkForTwo = this.twoInRow();\r\n    if (checkForTwo.isTrue){\r\n      return checkForTwo.openBox;\r\n    } else if(this.getOpenCorner()){\r\n      return this.getOpenCorner();\r\n    } else {\r\n      // go in open spot\r\n    }\r\n\r\n\r\n  },\r\n  // check if any streaks in various paths function based on paths to check\r\n  // view notes for applicable changes...\r\n  checkPaths: function(arr,event) {\r\n\r\n    let set = arr.map(function(pathId){\r\n\r\n      let pathArr = this.state.boardPaths[pathId];\r\n\r\n      if (check3InRow(pathArr)) {\r\n        console.log(`${pathArr[0].toUpperCase()}'s Won on path`,pathId)\r\n      }\r\n\r\n      return check3InRow(pathArr);\r\n    });\r\n    // possible mixin used ...\r\n    function check3InRow(arr) {\r\n      let match = true;\r\n      if(arr.length > 2 ) {\r\n        arr.reduce(function(acc,val){\r\n          if(acc !== val){\r\n              match = false;\r\n          }\r\n          return val;\r\n        });\r\n      }\r\n      return match;\r\n    }\r\n\r\n    return set;\r\n  },\r\n  render: function() {\r\n    const s = this.state;\r\n    let myBoxInfo = this.props.boxInfo;\r\n    // if its checked render the box with the checked box inside\r\n    if (this.props.boxInfo.checked){\r\n      return (\r\n        <div className={\"box \"+myBoxInfo.id+\" \"+myBoxInfo.bgColor}\r\n        onClick={ this.makeMoves.bind(this,myBoxInfo.id)}>\r\n          <div className={\"mark-box\" + \" \" + myBoxInfo.activeClassColor}>\r\n            <svg className=\"mark-icon\">\r\n              <use xlinkHref={\"#\"+myBoxInfo.mark+\"-mark\"}></use>\r\n            </svg>\r\n\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n    // else render the empty box\r\n    else {\r\n      return (\r\n        <div className={\"box \"+myBoxInfo.id+\" \"+myBoxInfo.bgColor}\r\n        onClick={ this.makeMoves.bind(this,myBoxInfo.id)}>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n});\r\n\r\nlet ResetBtn = React.createClass({\r\n  render: function(){\r\n    return (\r\n      <button id=\"reset-btn\" onClick={this.props.reset}>\r\n        <span id=\"reset-btn-text\">Reset</span>\r\n      </button>\r\n    )\r\n  }\r\n})\r\n\r\nReact.render(<App/>,document.getElementById('main'))\r\n\r\n\r\n// planning and working things out below ...\r\n"]}