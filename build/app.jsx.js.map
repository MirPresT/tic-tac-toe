{"version":3,"sources":["app.js"],"names":[],"mappings":"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","file":"app.jsx.js","sourcesContent":["/* if I update the parent state of the board with set state, will that state be passed into the rendered box components... i think so\r\n*/\r\nlet Page = React.createClass({\r\n  render:function() {\r\n    return (\r\n      <Board/>\r\n    )\r\n  }\r\n});\r\n\r\nlet Board = React.createClass({\r\n  getInitialState: function(){\r\n    // parent state that will stay on parent\r\n    let pathObj = {\r\n      \"1\": {\"layout\": [\"tl\",\"ml\",\"bl\"], \"marks\": 0 },\r\n      \"2\": {\"layout\": [\"tm\",\"mm\",\"bm\"], \"marks\": 0 },\r\n      \"3\": {\"layout\": [\"tr\",\"mr\",\"br\"], \"marks\": 0 },\r\n      \"4\": {\"layout\": [\"tl\",\"tm\",\"tr\"], \"marks\": 0 },\r\n      \"5\": {\"layout\": [\"ml\",\"mm\",\"mr\"], \"marks\": 0 },\r\n      \"6\": {\"layout\": [\"bl\",\"bm\",\"br\"], \"marks\": 0 },\r\n      \"7\": {\"layout\": [\"tl\",\"mm\",\"br\"], \"marks\": 0 },\r\n      \"8\": {\"layout\": [\"tr\",\"mm\",\"bl\"], \"marks\": 0 }\r\n    };\r\n    // this  will be mapped into appropriate components\r\n    const boxes = [\r\n      {id:\"tl\", paths:[\"1\",\"4\",\"7\"], checked:false, mark:\"x\"},\r\n      {id:\"tm\", paths:[\"2\",\"4\"], checked:false, mark:undefined},\r\n      {id:\"tr\", paths:[\"3\",\"4\",\"8\"], checked:false, mark:undefined},\r\n      {id:\"ml\", paths:[\"1\",\"5\"], checked:false, mark:undefined},\r\n      {id:\"mm\", paths:[\"2\",\"5\",\"7\",\"8\"], checked:false, mark:undefined},\r\n      {id:\"mr\", paths:[\"3\",\"5\"], checked:false, mark:undefined},\r\n      {id:\"bl\", paths:[\"1\",\"6\",\"8\"], checked:false, mark:\"x\"},\r\n      {id:\"bm\", paths:[\"2\",\"6\"], checked:false, mark:undefined},\r\n      {id:\"br\", paths:[\"3\",\"6\",\"7\"], checked:false, mark:undefined}\r\n    ];\r\n    // boxes in corners\r\n    const corners = [\"tl\",\"tr\",\"bl\",\"br\"];\r\n\r\n    return {\r\n      boxes,\r\n      pathObj,\r\n      corners,\r\n      userIcon: false,\r\n      firstMove: true\r\n    }\r\n  },\r\n  update: function(obj){\r\n    this.setState(obj);\r\n    console.log(this.state.pathObj)\r\n  },\r\n\r\n  render:function() {\r\n    return (\r\n      <div className=\"board mdl-shadow--6dp\">\r\n        {this.state.boxes.map(function(obj){\r\n          return <Box parentState={this.state} update={this.update} boxInfo={obj} />\r\n        }.bind(this))}\r\n        <h1></h1>\r\n      </div>\r\n    )\r\n  }\r\n});\r\n\r\nlet Box = React.createClass({\r\n  getInitialState: function(){\r\n    const attr = this.props;\r\n    let { userIcon:icon, pathObj, corners, firstMove:fmove, boxes } = attr.parentState;\r\n\r\n    let {id,paths,checked,mark} =  attr.boxInfo;\r\n\r\n    return {\r\n      id,\r\n      paths,\r\n      checked,\r\n      mark,\r\n      icon,\r\n      pathObj,\r\n      corners,\r\n      fmove,\r\n      boxes\r\n    }\r\n\r\n  },\r\n  firstCompMove: function(userPick) {\r\n    const s = this.state;\r\n    if( this.isCorner(userPick) ){\r\n      this.markBox(\"mm\", \"o\");\r\n    } else {\r\n      var corner = this.getLastCorner(s.paths);\r\n      this.markBox(corner, \"o\");\r\n    }\r\n    this.props.update({firstMove:false});\r\n  },\r\n  otherCompMoves: function(){\r\n    // enter all the logic from onenote\r\n  },\r\n  twoInRow: function(){\r\n    const allPaths = [1,2,3,4,5,6,7,8];\r\n    allPaths.filter(checkPath.bind(this));\r\n    console.log('**********************************************************************')\r\n\r\n    function checkPath( path ) {\r\n      // first ignore the paths that are not filled\r\n      let p = this.state.pathObj[ path ];\r\n      if ( p.marks < 3 ) {\r\n        // return arr in this format [[box],[box],[box]]\r\n        var arr = p.layout.map(convert.bind(this));\r\n        var test = arr.map(function(a,b,c){\r\n          // the mark of the double found\r\n          let mast = a[1];\r\n          // this is the open box in the path of the double\r\n          let openBox = c.filter( ele => ele[1] !== a[1])[0]\r\n          let copy = c.slice(0);\r\n          copy.splice(b,1);\r\n          let dif = copy.map(ele=>ele[1]);\r\n          if(dif.indexOf(mast) > -1 && mast!== undefined){\r\n            console.log(`${mast} is about to win. Play ${openBox} to stop them`);\r\n            return {match:true,mark:mast,openBox,path}\r\n          } else {return \"no match for this one\",a[0]}\r\n        }).filter(obj => obj !== undefined);\r\n        console.log(\"test\",test);\r\n      }\r\n      function convert(a,b,c){\r\n        let mark = this.state.boxes.filter( obj=>a === obj.id )[0].mark;\r\n        return [a,mark]\r\n      }\r\n    };\r\n  },\r\n  isCorner: function(box){\r\n    return (this.state.corners.indexOf(box) > -1 )? true : false\r\n  },\r\n  getLastCorner: function(paths) {\r\n    return (\r\n      paths.map( getPathsCorners.bind(this) )\r\n        .filter( isDefined )[0]\r\n        // only need one ie: the first one\r\n    )\r\n    function getPathsCorners( pId ){\r\n      let arr = this.state.pathObj[pId].layout;\r\n      return arr.filter(firstCorner.bind(this))[0]\r\n      // only need one corner but all are returned\r\n    }\r\n    function isDefined(a){\r\n      return a !== undefined;\r\n    }\r\n    function firstCorner(box) {\r\n      return this.isCorner(box)\r\n    }\r\n  },\r\n  markBox: function(box,mark){\r\n    console.log(\"compGoes:\",box,mark);\r\n    let pId = this.state.id;\r\n    this.pushToHistory(box,mark);\r\n  },\r\n  pushToHistory: function(box,mark) {\r\n    let s = this.state;\r\n    s.paths.map(record.bind(this));\r\n    function record(path){\r\n      // update is checked for certain boxes;\r\n    }\r\n    this.setState( {pathObj:s.pathObj} );\r\n    this.props.update( {pathObj:s.pathObj} );\r\n  },\r\n  // push User icon to paths\r\n  assignMarkToPaths: function(arr,mark,event){\r\n    let boardPaths = this.state.boardPaths;\r\n\r\n    arr.map(function(pathId){\r\n      this.state.boardPaths[pathId].push(mark)\r\n    }.bind(this));\r\n\r\n    this.setState({boardPaths});\r\n    this.props.update({boardPaths});\r\n  },\r\n  // push computer icon to path\r\n  computerChoice: function(){\r\n    // check paths of previous mark\r\n  },\r\n  // check if any streaks in various paths function based on paths to check\r\n  // view notes for applicable changes...\r\n  checkPaths: function(arr,event) {\r\n\r\n    let set = arr.map(function(pathId){\r\n\r\n      let pathArr = this.state.boardPaths[pathId];\r\n\r\n      if (check3InRow(pathArr)) {\r\n        console.log(`${pathArr[0].toUpperCase()}'s Won on path`,pathId)\r\n      }\r\n\r\n      return check3InRow(pathArr);\r\n    });\r\n    // possible mixin used ...\r\n    function check3InRow(arr) {\r\n      let match = true;\r\n      if(arr.length > 2 ) {\r\n        arr.reduce(function(acc,val){\r\n          if(acc !== val){\r\n              match = false;\r\n          }\r\n          return val;\r\n        });\r\n      }\r\n      return match;\r\n    }\r\n\r\n    return set;\r\n  },\r\n  render: function() {\r\n    this.twoInRow();\r\n    const s = this.state;\r\n    return (\r\n      <div className={\"box \"+s.id} onClick={\r\n        this.firstCompMove.bind(this,s.id)\r\n      }></div>\r\n    )\r\n  }\r\n});\r\n\r\nReact.render(<Page/>,document.body)\r\n\r\n\r\n// planning and working things out below ...\r\n"]}